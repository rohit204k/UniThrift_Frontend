# commands
# Editable mode to run scripts/postinstall
#   poetry install
# run scripts
#   poetry run generate_requirements
# For packaging
#   poetry build

[tool.poetry]
name = "fast-api-backend"
version = "0.2.0"
description = "FastAPI backend template"
authors = ["ritesh-dubey <ritesh.dubey@wowlabz.com>"]
readme = "README.md"
# needed only for packaging your app or running package module functions using poetry run generate_requirements
packages = [{include = "app"}]
license = "Proprietary"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
aiofiles = "23.2.1"
aioredis = "2.0.1"
aiosmtplib = "2.0.2"
azure-storage-blob = "12.18.3"
boto3 = "1.28.63"
fastapi = {version = "0.95.2", extras = ["all"]}
firebase-admin = "6.2.0"
httpx = "0.25.0"
loguru = "0.7.2"
motor = "3.3.1"
opencv-python-headless = "4.8.0.76"
orjson = "3.9.9"
pandas = "2.1.1"
pip-licenses = "4.3.3"
pybars3 = "0.9.7"
python-jose = {version = "3.3.0", extras = ["cryptography"]}
python-multipart = "0.0.6"
sendgrid = "6.10.0"
twilio = "8.9.1"
user-agents = "2.2.0"
uvicorn = "0.23.2"

[tool.poetry.group.dev.dependencies]
commitizen = "3.10.0"
pre-commit = "3.5.0"
toml = "0.10.2"

[tool.poetry.scripts]
# use this command in terminal to generate requirements.txt from pyproject.toml
generate-requirements = "scripts.postinstall:generate_requirements"
release-dev = "scripts.commitizen:release_dev"
release-uat = "scripts.commitizen:release_uat"
release-prod = "scripts.commitizen:release_prod"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.0"
tag_format = "v$major.$minor.$patch$prerelease"
version_files = [
    "pyproject.toml:version",
    "app/__init__.py:__version__",
]
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
]
update_changelog_on_bump = true
bump_message = "build: release $current_version â†’ $new_version"
annotated_tag = true
